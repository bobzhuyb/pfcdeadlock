
\section{PFC deadlocks in RDMA data centers}\label{sec:deadlock_problem}
In this section, we introduce several PFC deadlock cases that have been observed in our production data centers where RDMA has been deployed.

\subsection{routing loop induced PFC deadlock}\label{subsec:routing_loop}

\parab{Routing loop in DCNs:} Under normal circumstances, routing loops are not expected to happen in a DCN. However, many network errors including corruption of forwarding entries, switch or link failures and mis-configuration of forwarding tables can lead to routing loops. In the next, we use a small three-level Clos network to illustrate three loop scenarios caused by different network errors.

\begin{figure}[t]
\centering
\includegraphics[width=0.5\textwidth,center]{figs/loop_example_a.pdf}
\caption[Optional caption for list of figures]{A three-level Clos network for illustrating routing loops.}
\label{fig:routing_loop}
\end{figure}

A three-level Clos network consisting of 10 switches is shown in Fig.~\ref{fig:routing_loop}. In the topology, each ToR switch is directly connected to a set of servers in some subnet, e.g., servers in subnet "10.0.0.0/24" are directly connected to switch T1. The forwarding tables drawn in Fig.~\ref{fig:routing_loop} are the correct ones when the network is in a correct state. Note that ECMP (equal cost multipath) is used to do traffic load-balancing across all paths in the network.

\begin{figure}[t]
\centering
%\vspace{-0.15in}
\subfloat[short for lof][Loop caused by mis-configuration.] {
    \includegraphics[width=0.5\textwidth] {figs/loop_example_b.pdf}
    \label{fig:network-update_a}
}

%\vspace{-0.15in}
\subfloat[short for lof][Loop caused by entry corruption.] {
    \includegraphics[width=0.5\textwidth] {figs/loop_example_c.pdf}
    \label{fig:network-update_a}
}

\subfloat[short for lof][Loop caused by switch failure.] {
    \includegraphics[width=0.5\textwidth] {figs/loop_example_d.pdf}
    \label{fig:network-update_a}
}
%\vspace{-0.1in}
\caption[Optional caption for list of figures]{Three loop scenarios caused by different network errors.}
\label{fig:loop_scenarios}
%\vspace{-0.2in}
\end{figure}

Fig.~\ref{fig:loop_scenarios}(a) shows how a switch mis-configuration causes a loop. Due to a mis-configuration, the forwarding entry "10.0.0.0/24 $\rightarrow$ T1" becomes "10.0.0.0/24 $\rightarrow$ S1".  This creates a loop "S1 $\rightarrow$ L1 $\rightarrow$ S1" for the packets destined for the subnet "10.0.0.0/24".

Fig.~\ref{fig:loop_scenarios}(b) shows how a entry corruption causes two loops. In this scenario, the entry ``10.0.0.0/24 $\rightarrow$ T1" becomes invalid due to the entry corruption in the TCAM table. Then all the traffic destined for subnet ``10.0.0.0/24" will be forwarded back to either switch S1 or switch S2 by the default route ``Default $\rightarrow$ S1, S2". This creates two loops: ``S1 $\rightarrow$ L1 $\rightarrow$ S1" and ``S2 $\rightarrow$ L1 $\rightarrow$ S2".

Fig.~\ref{fig:loop_scenarios}(c) shows that a switch failure can also cause routing loops. In this scenario, switch T1 is down due to some failure. After detecting the failure of its neighbor, Switches L1 and L2 will delete the entry ``10.0.0.0/24 $\rightarrow$ T1" and stop forwarding packets to switch T1. However, Switch S1 and S2 will still forward packets destined for subnet ``10.0.0.0/24" to either L1 or L2 as they are not aware of the failure of switch T1. Then the packets will be forwarded back to S1 or S2 by the default entry ``Default $\rightarrow$ S1, S2". Three loop are created in this scenario: ``S1 $\rightarrow$ L1 $\rightarrow$ S1", ``S2 $\rightarrow$ L1 $\rightarrow$ S2" and ``S1 $\rightarrow$ L1 $\rightarrow$ S2 $\rightarrow$ L2 $\rightarrow$ S1".

Modern data centers can have tens of thousands of switches and millions of servers. Routing loop is not a rare exception. In fact, various loop incidents have been observed in both Google's and Microsoft's production DCNs~\cite{libra,everflow}.

%The adoption of dynamic routing protocols such as BGP and OSPF can help the network to recover from routing loops automatically. The convergence time
\parab{Loop induced PFC deadlock:} 

